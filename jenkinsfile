pipeline {
    agent any
    stages {
        stage('Get Code') {
            steps {
                // Obtener cÃ³digo del repo
                git 'https://github.com/FoxMateo/Caso-practico-1b.git'
                sh 'ls -la'
                echo WORKSPACE
            }
        }
        
        stage('Unit') {
            steps {
                catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                    sh '''
                        export PYTHONPATH=.
                        pytest --junitxml=result-unit.xml test/unit
                    '''
                }
                junit 'result*.xml'
            }
        }
        
        stage('Coverage') {
            steps {
                sh '''
                    coverage run --branch --source=app --omit=app/__init__.py,app/api.py -m pytest test/unit
                    coverage xml
                '''
                cobertura coberturaReportFile: 'coverage.xml'
            }
        }
        
        stage('Static') {
            steps {
                sh '''
                    flake8 --exit-zero --format=pylint app >flake8.out
                '''
                recordIssues tools: [flake8(name: 'Flake8', pattern: 'flake8.out')], qualityGates: [[threshold: 10, type: 'TOTAL', unstable: true], [threshold: 11, type: 'TOTAL', unstable: false]]
            }
        }
        
        stage('Security') {
            steps {
                sh '''
                    bandit --exit-zero -r . -f custom -o bandit.out --msg-template "{abspath}:{line}: {test_id} {msg}"
                '''
                recordIssues tools: [pyLint(name: 'Bandit', pattern: 'bandit.out')], qualityGates: [[threshold: 4, type: 'TOTAL', unstable: true], [threshold: 8, type: 'TOTAL', unstable: false]]
            }
        }
        
        stage('Start API') {
            steps {
                sh '''
                    export FLASK_APP=app/api.py
                    nohup flask run --host=0.0.0.0 --port=5000 &
                '''
                }
        }
        
        stage('Performance') {
            steps {
                sh '''
                    /home/oscar/cursos/devops-cloud/apache-jmeter-5.6.3/bin/jmeter.sh -n -t /home/oscar/cursos/devops-cloud/apache-jmeter-5.6.3/bin/testplan.jmx -f -l flask.jtl
                '''
                perfReport sourceDataFiles: 'flask.jtl'
            }    
        } 
    }
}
